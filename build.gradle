/*
The Spring Boot gradle plugin provides many convenient features:

It collects all the jars on the classpath and builds a single, runnable "�ber-jar", which makes it more convenient to execute and transport your service.
It searches for the public static void main() method to flag as a runnable class.
It provides a built-in dependency resolver that sets the version number to match Spring Boot dependencies. You can override any version you wish, but it will default to Boot�s chosen set of versions.
*/

//This will is necessary for when the script is built. Do not change it
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.2.RELEASE")
    }
}

//This are the gradle options enabled from the command line
apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'

//Define the name of the JAR file created when the project is built as an executable archive
jar {
    baseName = 'mycareer-web-service'
    version =  '1.1.0-email-redo'
}

//This defines the repositories where the dependencies can be found and downloaded
repositories {
	maven { url "https://repo.spring.io/libs-release" }
    mavenCentral()
}

//Java version for which this project works on
sourceCompatibility = 1.8
targetCompatibility = 1.8

//List of dependencies/libraries to include within the project
dependencies {
	
	//Development suits
	//Exclude Tomcat because it is already part of Jetty
    compile("org.springframework.boot:spring-boot-starter-web")
    
    //GSON library
    compile ("com.google.code.gson:gson:2.7")
    
    //Morphia library for the communication with MongoDB
    compile ("org.mongodb.morphia:morphia:1.2.1")
    
    //Library for the Exchange Server
    compile group: 'com.microsoft.ews-java-api', name: 'ews-java-api', version: '2.0'
    
    //Library used to interact with HTML tags inside the email body
    compile group: 'org.jsoup', name: 'jsoup', version: '1.7.2'
    
    //Add a logging library to log crucial events that happen in the system --> TO BE IMPLEMENTED
    //compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.7'
    
    //Test suits
    testCompile("junit:junit")
    //testCompile("org.springframework.boot:spring-boot-starter-test")
    
    compile group: 'org.mockito', name: 'mockito-all', version: '1.9.5'
    
    //SSO with SPNEGO (Internal libraries)
    compile files('libs/spnego-r7.jar')
	compile files('libs/local_policy.jar')
	compile files('libs/US_export_policy.jar')
}
